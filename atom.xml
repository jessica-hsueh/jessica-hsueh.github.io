<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Welcome to Jessica&#39;s Blog</title>
  
  <subtitle>This is Jiachen Xue.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jessica.github.io/"/>
  <updated>2020-08-20T11:45:38.930Z</updated>
  <id>https://jessica.github.io/</id>
  
  <author>
    <name>Jiachen Xue</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于python的scipy库安装后的报错问题 - module &#39;scipy.misc&#39; has no attribute &#39;imread&#39; or &#39;imresize&#39;</title>
    <link href="https://jessica.github.io/2020/04/15/bug-python-scipy/"/>
    <id>https://jessica.github.io/2020/04/15/bug-python-scipy/</id>
    <published>2020-04-15T08:27:10.000Z</published>
    <updated>2020-08-20T11:45:38.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>scipy库版本升级，imread,imresize是以前版本的scipy库中的方法。</p><a id="more"></a><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p><strong>重新安装较低版本的scipy库</strong>。（个人觉得也可以去研究一下scipy库的官方文档，最好是使用新版本提供的新函数，但是降低版本比较快）</p><p>目前最新版本应该是1.4.1。<br><strong>重新安装1.2.1版本</strong> - <strong>pip install scipy==1.2.1</strong>（看到有些用户提到也需要安装pillow，我已经安装过pillow 7.0.0 了，有未安装pillow且仍有bug的用户可以尝试下）</p><hr><p><em>以下步骤针对小白用户。</em></p><h2 id="查看已安装的库函数以及版本"><a href="#查看已安装的库函数以及版本" class="headerlink" title="查看已安装的库函数以及版本"></a>查看已安装的库函数以及版本</h2><p>我是在<strong>Anaconda集成环境</strong>下安装tensorflow的，个人觉得这个办法是相对简便的。下面提供三种方法：</p><ol><li><p>打开Anaconda Prompt，输入<strong>activate tensorflow</strong>进入tensorflow，再输入<strong>pip list</strong>即可查看。<br><img src="https://img-blog.csdnimg.cn/20200412211112836.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjM5MzkwMQ==,size_16,color_FFFFFF,t_70" alt="img1"></p></li><li><p>如果项目是在<strong>pycharm</strong>中建立的，可以直接在File - Settings - Project Interpreter中查看已安装的库以及安装新的库函数，但是安装新的库函数只能安装最新版本。<br><img src="https://img-blog.csdnimg.cn/20200412210918296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjM5MzkwMQ==,size_16,color_FFFFFF,t_70" alt="img2"></p></li><li><p>打开Anaconda文件夹，按照envs - tensorflow - lib - site-packages顺序即可看到已安装的库。<br><img src="https://img-blog.csdnimg.cn/20200412211525775.png" alt="img3"></p></li></ol><h2 id="安装库函数"><a href="#安装库函数" class="headerlink" title="安装库函数"></a>安装库函数</h2><p>下面提供两种方法（针对bug只可用第一种）：</p><ol><li><p>打开Anaconda Prompt，输入<strong>activate tensorflow</strong>进入tensorflow，再输入<strong>pip install scipy==1.2.1</strong>即可安装。<br><img src="https://img-blog.csdnimg.cn/20200412210249121.png" alt="img4"></p></li><li><p>在上面查看库函数的第二种方法的pycharm界面也可安装最新版本库函数。<br><img src="https://img-blog.csdnimg.cn/20200412211624493.png" alt="img5"><br>点击+号在搜索框输入库名称即可安装。<br><img src="https://img-blog.csdnimg.cn/2020041221175419.png" alt="img6"></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;scipy库版本升级，imread,imresize是以前版本的scipy库中的方法。&lt;/p&gt;
    
    </summary>
    
      <category term="图像风格化" scheme="https://jessica.github.io/categories/%E5%9B%BE%E5%83%8F%E9%A3%8E%E6%A0%BC%E5%8C%96/"/>
    
    
      <category term="code" scheme="https://jessica.github.io/tags/code/"/>
    
      <category term="deep learning" scheme="https://jessica.github.io/tags/deep-learning/"/>
    
      <category term="python" scheme="https://jessica.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>ImageStylization</title>
    <link href="https://jessica.github.io/2020/02/24/ImageStylization/"/>
    <id>https://jessica.github.io/2020/02/24/ImageStylization/</id>
    <published>2020-02-24T14:40:18.000Z</published>
    <updated>2020-08-24T15:54:13.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>主要思路依据gatys的论文，核心思想是利用VGG19网络提取图像不同层级的特征，其中低层级响应描述图像的风格，高层级响应描述图像的内容。</p><p>未完待续…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基本原理&quot;&gt;&lt;a href=&quot;#基本原理&quot; class=&quot;headerlink&quot; title=&quot;基本原理&quot;&gt;&lt;/a&gt;基本原理&lt;/h2&gt;&lt;p&gt;主要思路依据gatys的论文，核心思想是利用VGG19网络提取图像不同层级的特征，其中低层级响应描述图像的风格，高层级响应描
      
    
    </summary>
    
      <category term="图像风格化" scheme="https://jessica.github.io/categories/%E5%9B%BE%E5%83%8F%E9%A3%8E%E6%A0%BC%E5%8C%96/"/>
    
    
      <category term="code" scheme="https://jessica.github.io/tags/code/"/>
    
      <category term="deep learning" scheme="https://jessica.github.io/tags/deep-learning/"/>
    
      <category term="CNN" scheme="https://jessica.github.io/tags/CNN/"/>
    
  </entry>
  
  <entry>
    <title>车牌识别系统</title>
    <link href="https://jessica.github.io/2019/01/24/LicensePlateRecognition/"/>
    <id>https://jessica.github.io/2019/01/24/LicensePlateRecognition/</id>
    <published>2019-01-24T14:00:39.000Z</published>
    <updated>2020-08-24T14:38:42.125Z</updated>
    
    <content type="html"><![CDATA[<h2 id="项目要求"><a href="#项目要求" class="headerlink" title="项目要求"></a>项目要求</h2><p>编程实现视频中车牌号的识别。输入为含有车辆车牌的视频，经过图像预处理、车牌定位、字符分割和字符识别一系列处理，输出为车牌号。</p><a id="more"></a><h2 id="图像预处理"><a href="#图像预处理" class="headerlink" title="图像预处理"></a>图像预处理</h2><h3 id="在视频序列中提取出含有车辆的关键帧图像"><a href="#在视频序列中提取出含有车辆的关键帧图像" class="headerlink" title="在视频序列中提取出含有车辆的关键帧图像"></a>在视频序列中提取出含有车辆的关键帧图像</h3><p><strong>帧差法</strong>检测出运动目标，用矩形框圈出运动目标，当矩形框面积足够大时，将当前帧设置为关键帧。</p><h3 id="预处理过程"><a href="#预处理过程" class="headerlink" title="预处理过程"></a>预处理过程</h3><p>将关键帧图像灰度化，利用x方向上的sobel算子对其进行边缘检测，之后计算阈值将其二值化。</p><h2 id="车牌定位"><a href="#车牌定位" class="headerlink" title="车牌定位"></a>车牌定位</h2><p>先对经过预处理后的车牌的二值图像运用形态学进行滤波，使得车牌区域能够形成一个连通区域。然后默认车牌颜色为蓝色，通过<strong>HSV通道提取</strong>，查找出<strong>蓝色</strong>所在区域，即是车牌所在区域。</p><h2 id="字符分割"><a href="#字符分割" class="headerlink" title="字符分割"></a>字符分割</h2><p>对车牌图片进行水平方向的<strong>投影</strong>，去除水平边框，然后再进行垂直方向的投影。通过分析车牌投影可以得知，投影中最大峰值所对应的是车牌中的第二个字符和第三个字符之间的间隔，第二大峰值中心距离对应的是车牌字符的宽度，以此类推就可以对车牌字符进行分割。</p><h2 id="字符识别"><a href="#字符识别" class="headerlink" title="字符识别"></a>字符识别</h2><p>利用<strong>模板匹配法</strong>进行字符识别。定义车牌字符以及字符模板的15个特征值。通过CodeRecognize(IplImage imgTest, int num, int char_num)函数进行识别，imgTest是字符分割后的图像，num的设置是为了提高识别的效率，0代表数字，1代表英文，2代表英文或数字，3代表中文，char_num代表字符的序号。<br>通过计算实际特征值与模板中特征值的差值的绝对值得到匹配度，匹配度最大的即为识别到的字符。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;项目要求&quot;&gt;&lt;a href=&quot;#项目要求&quot; class=&quot;headerlink&quot; title=&quot;项目要求&quot;&gt;&lt;/a&gt;项目要求&lt;/h2&gt;&lt;p&gt;编程实现视频中车牌号的识别。输入为含有车辆车牌的视频，经过图像预处理、车牌定位、字符分割和字符识别一系列处理，输出为车牌号。&lt;/p&gt;
    
    </summary>
    
      <category term="车牌识别" scheme="https://jessica.github.io/categories/%E8%BD%A6%E7%89%8C%E8%AF%86%E5%88%AB/"/>
    
    
      <category term="code" scheme="https://jessica.github.io/tags/code/"/>
    
      <category term="OpenCV" scheme="https://jessica.github.io/tags/OpenCV/"/>
    
      <category term="MFC" scheme="https://jessica.github.io/tags/MFC/"/>
    
  </entry>
  
  <entry>
    <title>Hello Blog</title>
    <link href="https://jessica.github.io/2017/09/16/new-article/"/>
    <id>https://jessica.github.io/2017/09/16/new-article/</id>
    <published>2017-09-16T02:34:57.000Z</published>
    <updated>2020-08-24T07:34:11.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="This-is-my-first-article"><a href="#This-is-my-first-article" class="headerlink" title="This is my first article."></a>This is my first article.</h1><blockquote><p>Markdown初体验</p></blockquote><a id="more"></a><ul><li><strong>sina weibo</strong><br><a href="https://weibo.com/p/1005053994306309/home?from=page_100505&amp;mod=TAB&amp;is_all=1#place" target="_blank" rel="external">click here</a></li><li><em>my photo</em><br><img src="http://qfk3u5yyc.hd-bkt.clouddn.com/yangmei.jpg" alt="my photo"></li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;This-is-my-first-article&quot;&gt;&lt;a href=&quot;#This-is-my-first-article&quot; class=&quot;headerlink&quot; title=&quot;This is my first article.&quot;&gt;&lt;/a&gt;This is my first article.&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown初体验&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="life" scheme="https://jessica.github.io/categories/life/"/>
    
    
      <category term="life" scheme="https://jessica.github.io/tags/life/"/>
    
  </entry>
  
</feed>
